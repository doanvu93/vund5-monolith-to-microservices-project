version: 2.1
 
jobs:
  build:
    docker:
      - image: circleci/node:14-browsers
    steps:
      - checkout
      - setup_remote_docker
      # Troubleshoot notsup Unsupported platform for fsevents@2.3.2: wanted {"os":"darwin"}
      # # Install dependencies with --force to ignore conflicts             
      # - run:
      #     name: Install dependencies for frontend
      #     working_directory: udagram-frontend
      #     command: npm ci --force    
      # Step 1: Xóa file package-lock.json
      - run:
          name: Remove package-lock.json
          command: |
            rm -f udagram-frontend/package-lock.json
 
      # Step 2: Xóa dòng fsevents khỏi package.json
      - run:
          name: Remove fsevents from package.json
          command: |
            sed -i '/"fsevents":/d' udagram-frontend/package.json
 
      # Step 3: Cài đặt các dependencies và tạo file package-lock.json mới
      - run:
          name: Install dependencies and recreate package-lock.json
          command: |
            cd udagram-frontend && npm install --legacy-peer-deps            
 
      # Build Docker images for each service
      - run:
          name: Build Docker images
          command: |
            docker build -t udagram-api-feed ./udagram-api-feed
            docker build -t udagram-api-user ./udagram-api-user
            docker build -t reverseproxy ./udagram-reverseproxy
            docker build -t udagram-frontend ./udagram-frontend         # Ensure to update the tag (e.g., v1 to v2) to trigger Kubernetes to pull the new image version
            docker tag udagram-api-feed $DOCKER_USERNAME/udagram-api-feed
            docker tag udagram-api-user $DOCKER_USERNAME/udagram-api-user
            docker tag reverseproxy $DOCKER_USERNAME/reverseproxy
            docker tag udagram-frontend $DOCKER_USERNAME/udagram-frontend
 
      # Log into DockerHub using information from environment variable
      - run:
          name: Log in to DockerHub
          command: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
 
      # Push Docker images to DockerHub
      - run:
          name: Push Docker images
          command: |
            docker push $DOCKER_USERNAME/udagram-api-feed
            docker push $DOCKER_USERNAME/udagram-api-user
            docker push $DOCKER_USERNAME/reverseproxy
            docker push $DOCKER_USERNAME/udagram-frontend                 # Ensure to update the tag (e.g., v1 to v2) to trigger Kubernetes to pull the new image version
 
workflows:
  version: 2
  build_and_push:
    jobs:
      - build